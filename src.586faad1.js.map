{"version":3,"sources":["src/index.js"],"names":["numArr","newNumArr","map","num","console","log"],"mappings":";AA2HA,IAAMA,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,GACtBC,EAAYD,EAAOE,IAAI,SAACC,GAC5B,OAAOA,EAAM,GAAM,IAGrBC,QAAQC,IAAIJ","file":"src.586faad1.js","sourceRoot":"..","sourcesContent":["// const val4 = {\r\n//   name: \"西浦\",\r\n//   age: 30\r\n// };\r\n// val4.name = \"nishiura\";\r\n// console.log(val4);\r\n\r\n// const val5 = ['dog', 'cat'];\r\n// val5[0] = 'bird';\r\n// val5.push('monkey');\r\n// console.log(val5);\r\n\r\n/** テンプレート文字列*/\r\n\r\n// const name = \"西浦\";\r\n// const age = 30;\r\n\r\n// 従来\r\n\r\n// const message1 = \"私の名前は\" + name + \"です。年齢は\" + age + \"です。\";\r\n// console.log(message1);\r\n// const message2 = `私の名前は${name}です。年齢は${age}です。.`;\r\n// console.log(message2);\r\n\r\n/**アロー関数 */\r\n// function func1(Str) {\r\n//   return Str;\r\n// }\r\n\r\n// const func1 = function (str) {\r\n//   return str;\r\n// };\r\n// console.log(func1(\"func1です\"));\r\n\r\n// // アロー関数\r\n// const func2 = (str) => {\r\n//   return str;\r\n// };\r\n\r\n// const func2 = (str) => str;\r\n// console.log(func2(\"func2です\"));\r\n\r\n// const func3 = (num1,num2) => {\r\n//   return num1 + num2;\r\n// }\r\n// console.log(func3(10,20));\r\n\r\n// const myProfile = {\r\n//   name: 'にしうら',\r\n//   age: 30,\r\n// };\r\n\r\n// const message1 = `名前は${myProfile.name}です。年齢は${myProfile.age}歳です。`;\r\n// console.log(message1);\r\n\r\n// const { name, age } = myProfile;\r\n// const message2 = `名前は${name}です。年齢は${age}です。`;\r\n// console.log(message2);\r\n\r\n// const myProfile = ['にしうら', 30]\r\n// const message3 = `名前は${myProfile[0]}です。年齢は${myProfile[1]}歳です。`;\r\n// console.log(message3);\r\n\r\n// const[name, age] = myProfile;\r\n// const message4 = `名前は${name}です。年齢は${age}です。`;\r\n\r\n// const sayHello = (name = 'ゲスト') => console.log(`こんにちは！${name}さん`);\r\n// sayHello();\r\n\r\n//** スプレッド構文 */\r\n\r\n//配列の展開\r\n// const arr1 = [1, 2];\r\n// console.log(arr1);\r\n// console.log(...arr1);\r\n\r\n// const sumFunc = (num1, num2) => console.log(num1 + num2);\r\n// sumFunc(arr1[0], arr1[1]);\r\n// sumFunc(...arr1);\r\n\r\n// //まとめる\r\n// const arr2 = [1, 2, 3, 4, 5];\r\n// const [num1, num2, ...arr3] = arr2;\r\n// console.log(num1);\r\n// console.log(num2);\r\n// console.log(arr3);\r\n\r\n// //配列のコピー、結合\r\n// const arr4 = [10, 20];\r\n// const arr5 = [30, 40];\r\n\r\n// const arr6 = [...arr4];\r\n// console.log(arr6);\r\n\r\n// const arr7 = [...arr4, ...arr5];\r\n// console.log(arr7);\r\n\r\n// const arr8 = arr4;\r\n// console.log(arr8);\r\n// // arr8[0] = 100;\r\n// console.log(arr4);\r\n\r\n/**mapや */\r\n\r\n// const nameArr = ['田中','山田','西浦'];\r\n\r\n// for(let index = 0; index < nameArr.length; index++) {\r\n//   console.log(nameArr[index]);\r\n// }\r\n// //結果　田中、山田、西浦\r\n\r\n// //nameArr2と同じ配列を作成\r\n// //厳密にはname引数に配列の中身を順番に入れている\r\n// const nameArr2 = nameArr.map((name) => {\r\n//   return name;\r\n// })\r\n// console.log(nameArr2); //結果　(3) [\"田中\", \"山田\", \"西浦\"]\r\n\r\n// //for文と同じ内容が出力できる。\r\n// nameArr.map((name) => console.log(name));\r\n// //結果　田中、山田、西浦\r\n\r\n// filter\r\nconst numArr = [1, 2, 3, 4, 5];\r\nconst newNumArr = numArr.map((num) => {\r\n  return num % 2 === 0; //numArrの中で、偶数のものを抽出し、新しい配列として出力\r\n  // return num % 2 === 1; //奇数を出力\r\n});\r\nconsole.log(newNumArr);\r\n\r\n// const nameArr = ['田中','やまだ','西浦'];\r\n// for(let index = 0; index < nameArr.length; index++) {\r\n//   console.log(`${index + 1}番目は${nameArr[index]}です`)\r\n// }\r\n\r\n// nameArr.map((name, index) => console.log(`${index + 1}番目は${name}です`))\r\n\r\n// const newNameArr = nameArr.map((name) => {\r\n//   if(name === '西浦') {\r\n//     return name\r\n//   } else {\r\n//     return `${name}さん`\r\n//   }\r\n// })\r\n// console.log(newNameArr);\r\n\r\n// //ある条件　？　 条件がtrueの時 : 条件がfalseの時\r\n// const val1 = 1 < 0 ? 'trueです' : 'falseです';\r\n// console.log(val1);\r\n\r\n// const num = 1300;\r\n// console.log(num.toLocaleString()); //toLocalStringは3ケタごとにカンマを打ってくれる関数\r\n\r\n// //numの方が「number」かどうか？　typeofで出力することができる\r\n// const formattedNum = typeof num === 'number' ? num.toLocaleString() : '数値を入力してください';\r\n\r\n// // 値の合計が100を超えているかどうか\r\n// const checkSum = (num1, num2) => {\r\n//   return num1 + num2 > 100 ? '100を超えてます' : '許容範囲内です';\r\n// }\r\n// console.log(checkSum(1, 1000));\r\n\r\n// const num2 = null;\r\n// const fee = num2 && '何か設定されました';\r\n// console.log(fee);\r\n"]}